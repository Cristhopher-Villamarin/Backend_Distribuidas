version: '3.8'

services:
  # CockroachDB cluster de 7 nodos
  cockroachdb-node1:
    image: cockroachdb/cockroach:v23.1.11
    command: start --insecure --join=cockroachdb-node1,cockroachdb-node2,cockroachdb-node3,cockroachdb-node4,cockroachdb-node5,cockroachdb-node6,cockroachdb-node7
    hostname: cockroachdb-node1
    ports:
      - "26257:26257"
      - "8081:8080"
    volumes:
      - cockroach-data1:/cockroach/cockroach-data
    networks:
      - app-network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  # Kong API Gateway
  kong:
    image: kong:latest
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
    ports:
      - "8000:8000"
      - "8001:8001"
    volumes:
      - ./kong.yml:/kong/declarative/kong.yml
    networks:
      - app-network
    depends_on:
      - usuarios
    restart: unless-stopped

  # Microservicio de usuarios
  usuarios:
    build: ./usuarios
    ports:
      - "3000:3000"
    environment:
      DB_HOST: cockroachdb-node1
      DB_PORT: 26257
      DB_NAME: usuariosdb
      DB_USER: root
      DB_PASSWORD: ""
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      JWT_SECRET: supersecreto123
      PORT: 3000
      NODE_ENV: development
    depends_on:
      - cockroachdb-node1
      - rabbitmq
    networks:
      - app-network

  # Aquí puedes agregar más microservicios, por ejemplo:
  # categorias, eventos, compras, etc.
  # Solo copia y ajusta el bloque de "usuarios" para cada uno.

volumes:
  cockroach-data1:
  cockroach-data2:
  cockroach-data3:

networks:
  app-network:
    driver: bridge